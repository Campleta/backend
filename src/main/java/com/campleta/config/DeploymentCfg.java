package com.campleta.config;

import com.campleta.models.Area;
import com.campleta.models.AreaType;
import com.campleta.models.Campsite;
import com.campleta.models.Reservation;
import com.campleta.models.Role;
import com.campleta.models.Stay;
import com.campleta.models.User;

import java.time.*;
import java.util.Calendar;
import java.util.Date;
import java.util.Map;
import java.util.TimeZone;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.servlet.ServletContext;
import javax.servlet.ServletContextEvent;
import javax.servlet.ServletContextListener;
import javax.servlet.annotation.WebListener;

@WebListener
public class DeploymentCfg implements ServletContextListener {
    
    public static String PU_NAME = DatabaseCfg.PU_NAME;

    @Override
    public void contextInitialized(ServletContextEvent sce) {
        Map<String, String> env = System.getenv();
        //If we are running in the OPENSHIFT environment change the pu-name 
        if (env.keySet().contains("TEST")) {
          PU_NAME = DatabaseCfg.PU_NAME_DEV;
        }
        try {
            ServletContext context = sce.getServletContext();
            EntityManagerFactory emf = Persistence.createEntityManagerFactory(DeploymentCfg.PU_NAME);
            EntityManager em = emf.createEntityManager();
            
            if(em.find(Role.class, "User") != null && em.find(Role.class, "Admin") != null) {
                return;
            }
            
            Role guest = new Role("Guest");
            Role user = new Role("User");
            Role employee = new Role("Employee");
            Role owner = new Role("Owner");
            Role admin = new Role("Admin");
            Campsite marina = new Campsite();
            Campsite campleta = new Campsite();
            marina.setName("Marina Di Venezia");
            campleta.setName("Campleta Gili");
            User u = new User("test@campleta.com", "Test", "User");
            u.setPassword("1234");
            u.setPassport("12345678");
            u.addRole(guest);
            u.addRole(user);
            u.addRole(employee);
            u.addRole(owner);
            u.addRole(admin);
            u.addCampsite(campleta);
            u.addCampsite(marina);
            campleta.addEmployee(u);
            campleta.setMapUrl("http://res.cloudinary.com/campleta/image/upload/t_media_lib_thumb/v1504180769/Countries_Europe_c8ktdl.svg");
            marina.addEmployee(u);

            AreaType tent = new AreaType("Tent");
            AreaType caravan = new AreaType("Caravan");
            AreaType house = new AreaType("House");
            AreaType bighouse = new AreaType("Big House");
            
            tent.addCampsite(campleta);
            tent.addCampsite(marina);
            caravan.addCampsite(campleta);
            caravan.addCampsite(marina);
            house.addCampsite(campleta);
            house.addCampsite(marina);
            bighouse.addCampsite(campleta);
            bighouse.addCampsite(marina);

            Area gl = new Area("gl");
            marina.addArea(gl);
            gl.setCampsite(marina);
            Area is = new Area("is");
            marina.addArea(is);
            is.setCampsite(marina);
            Area pt = new Area("pt");
            marina.addArea(pt);
            pt.setCampsite(marina);
            Area ma = new Area("ma");
            marina.addArea(ma);
            ma.setCampsite(marina);
            Area es = new Area("es");
            marina.addArea(es);
            es.setCampsite(marina);
            Area tn = new Area("tn");
            marina.addArea(tn);
            tn.setCampsite(marina);
            Area dz = new Area("dz");
            marina.addArea(dz);
            dz.setCampsite(marina);
            Area be = new Area("be");
            marina.addArea(be);
            be.setCampsite(marina);
            Area it = new Area("it");
            marina.addArea(it);
            it.setCampsite(marina);
            Area by = new Area("by");
            marina.addArea(by);
            by.setCampsite(marina);
            Area pl = new Area("pl");
            marina.addArea(pl);
            pl.setCampsite(marina);
            Area jo = new Area("jo");
            marina.addArea(jo);
            jo.setCampsite(marina);
            Area gr = new Area("gr");
            marina.addArea(gr);
            gr.setCampsite(marina);
            Area tm = new Area("tm");
            marina.addArea(tm);
            tm.setCampsite(marina);
            Area kz = new Area("kz");
            marina.addArea(kz);
            kz.setCampsite(marina);
            Area fi = new Area("fi");
            marina.addArea(fi);
            fi.setCampsite(marina);
            Area de = new Area("de");
            marina.addArea(de);
            de.setCampsite(marina);
            Area se = new Area("se");
            marina.addArea(se);
            se.setCampsite(marina);
            Area no = new Area("no");
            marina.addArea(no);
            no.setCampsite(marina);
            Area ua = new Area("ua");
            marina.addArea(ua);
            ua.setCampsite(marina);
            Area il = new Area("il");
            marina.addArea(il);
            il.setCampsite(marina);
            Area sa = new Area("sa");
            marina.addArea(sa);
            sa.setCampsite(marina);
            Area iq = new Area("iq");
            marina.addArea(iq);
            iq.setCampsite(marina);
            Area az = new Area("az");
            marina.addArea(az);
            az.setCampsite(marina);
            Area ir = new Area("ir");
            marina.addArea(ir);
            ir.setCampsite(marina);
            Area ge = new Area("ge");
            marina.addArea(ge);
            ge.setCampsite(marina);
            Area sy = new Area("sy");
            marina.addArea(sy);
            sy.setCampsite(marina);
            Area tr = new Area("tr");
            marina.addArea(tr);
            tr.setCampsite(marina);
            Area am = new Area("am");
            marina.addArea(am);
            am.setCampsite(marina);
            Area ie = new Area("ie");
            marina.addArea(ie);
            ie.setCampsite(marina);
            Area ch = new Area("ch");
            marina.addArea(ch);
            ch.setCampsite(marina);
            Area at = new Area("at");
            marina.addArea(at);
            at.setCampsite(marina);
            Area cz = new Area("cz");
            marina.addArea(cz);
            cz.setCampsite(marina);
            Area sk = new Area("sk");
            marina.addArea(sk);
            sk.setCampsite(marina);
            Area hu = new Area("hu");
            marina.addArea(hu);
            hu.setCampsite(marina);
            Area lt = new Area("lt");
            marina.addArea(lt);
            lt.setCampsite(marina);
            Area lv = new Area("lv");
            marina.addArea(lv);
            lv.setCampsite(marina);
            Area md = new Area("md");
            marina.addArea(md);
            md.setCampsite(marina);
            Area ro = new Area("ro");
            marina.addArea(ro);
            ro.setCampsite(marina);
            Area bg = new Area("bg");
            marina.addArea(bg);
            bg.setCampsite(marina);
            Area al = new Area("al");
            marina.addArea(al);
            al.setCampsite(marina);
            Area ee = new Area("ee");
            marina.addArea(ee);
            ee.setCampsite(marina);
            Area lb = new Area("lb");
            marina.addArea(lb);
            lb.setCampsite(marina);
            Area ad = new Area("ad");
            marina.addArea(ad);
            ad.setCampsite(marina);
            Area sm = new Area("sm");
            marina.addArea(sm);
            sm.setCampsite(marina);
            Area mc = new Area("mc");
            marina.addArea(mc);
            mc.setCampsite(marina);
            Area lu = new Area("lu");
            marina.addArea(lu);
            lu.setCampsite(marina);
            Area fr = new Area("fr");
            marina.addArea(fr);
            fr.setCampsite(marina);
            Area li = new Area("li");
            marina.addArea(li);
            li.setCampsite(marina);
            Area nl = new Area("nl");
            marina.addArea(nl);
            nl.setCampsite(marina);
            Area ba = new Area("ba");
            marina.addArea(ba);
            ba.setCampsite(marina);
            Area si = new Area("si");
            marina.addArea(si);
            si.setCampsite(marina);
            Area mk = new Area("mk");
            marina.addArea(mk);
            mk.setCampsite(marina);
            Area hr = new Area("hr");
            marina.addArea(hr);
            hr.setCampsite(marina);
            Area ru_main = new Area("ru-main");
            marina.addArea(ru_main);
            ru_main.setCampsite(marina);
            Area ru_kgd = new Area("ru-kgd");
            marina.addArea(ru_kgd);
            ru_kgd.setCampsite(marina);
            Area me = new Area("me");
            marina.addArea(me);
            me.setCampsite(marina);
            Area rs = new Area("rs");
            marina.addArea(rs);
            rs.setCampsite(marina);
            Area gb_nir = new Area("gb-nir");
            marina.addArea(gb_nir);
            gb_nir.setCampsite(marina);
            Area gb_gbn = new Area("gb-gbn");
            marina.addArea(gb_gbn);
            gb_gbn.setCampsite(marina);
            Area im = new Area("im");
            marina.addArea(im);
            im.setCampsite(marina);
            Area gg = new Area("gg");
            marina.addArea(gg);
            gg.setCampsite(marina);
            Area je = new Area("je");
            marina.addArea(je);
            je.setCampsite(marina);
            Area va = new Area("va");
            marina.addArea(va);
            va.setCampsite(marina);
            Area kosovo = new Area("Kosovo");
            marina.addArea(kosovo);
            kosovo.setCampsite(marina);
            Area mt = new Area("mt");
            marina.addArea(mt);
            mt.setCampsite(marina);
            Area dk = new Area("dk");
            marina.addArea(dk);
            dk.setCampsite(marina);
            Area cy = new Area("cy");
            marina.addArea(cy);
            cy.setCampsite(marina);
            Area nc = new Area("nc");
            marina.addArea(nc);
            nc.setCampsite(marina);

            gl.addAreaType(tent);
            gl.addAreaType(caravan);
            is.addAreaType(tent);
            is.addAreaType(caravan);
            pt.addAreaType(tent);
            pt.addAreaType(caravan);
            ma.addAreaType(tent);
            ma.addAreaType(caravan);
            es.addAreaType(tent);
            es.addAreaType(caravan);
            tn.addAreaType(tent);
            tn.addAreaType(caravan);
            dz.addAreaType(tent);
            dz.addAreaType(caravan);
            be.addAreaType(tent);
            be.addAreaType(caravan);
            it.addAreaType(tent);
            it.addAreaType(caravan);
            by.addAreaType(tent);
            by.addAreaType(caravan);
            pl.addAreaType(tent);
            pl.addAreaType(caravan);
            jo.addAreaType(tent);
            jo.addAreaType(caravan);
            gr.addAreaType(tent);
            gr.addAreaType(caravan);
            tm.addAreaType(tent);
            tm.addAreaType(caravan);
            kz.addAreaType(tent);
            kz.addAreaType(caravan);
            fi.addAreaType(tent);
            fi.addAreaType(caravan);
            de.addAreaType(tent);
            de.addAreaType(caravan);
            se.addAreaType(tent);
            se.addAreaType(caravan);
            no.addAreaType(tent);
            no.addAreaType(caravan);
            ua.addAreaType(tent);
            ua.addAreaType(caravan);
            il.addAreaType(tent);
            il.addAreaType(caravan);
            sa.addAreaType(tent);
            sa.addAreaType(caravan);
            iq.addAreaType(tent);
            iq.addAreaType(caravan);
            az.addAreaType(tent);
            az.addAreaType(caravan);
            ir.addAreaType(tent);
            ir.addAreaType(caravan);
            ge.addAreaType(tent);
            ge.addAreaType(caravan);
            sy.addAreaType(tent);
            sy.addAreaType(caravan);
            tr.addAreaType(tent);
            tr.addAreaType(caravan);
            am.addAreaType(tent);
            am.addAreaType(caravan);
            ie.addAreaType(tent);
            ie.addAreaType(caravan);
            ch.addAreaType(tent);
            ch.addAreaType(caravan);
            at.addAreaType(tent);
            at.addAreaType(caravan);
            cz.addAreaType(tent);
            cz.addAreaType(caravan);
            sk.addAreaType(tent);
            sk.addAreaType(caravan);
            hu.addAreaType(tent);
            hu.addAreaType(caravan);
            lt.addAreaType(tent);
            lt.addAreaType(caravan);
            lv.addAreaType(tent);
            lv.addAreaType(caravan);
            md.addAreaType(tent);
            md.addAreaType(caravan);
            ro.addAreaType(tent);
            ro.addAreaType(caravan);
            bg.addAreaType(tent);
            bg.addAreaType(caravan);
            al.addAreaType(tent);
            al.addAreaType(caravan);
            ee.addAreaType(tent);
            ee.addAreaType(caravan);
            lb.addAreaType(tent);
            lb.addAreaType(caravan);
            ad.addAreaType(tent);
            ad.addAreaType(caravan);
            sm.addAreaType(tent);
            sm.addAreaType(caravan);
            mc.addAreaType(tent);
            mc.addAreaType(caravan);
            lu.addAreaType(tent);
            lu.addAreaType(caravan);
            fr.addAreaType(tent);
            fr.addAreaType(caravan);
            li.addAreaType(tent);
            li.addAreaType(caravan);
            nl.addAreaType(tent);
            nl.addAreaType(caravan);
            ba.addAreaType(tent);
            ba.addAreaType(caravan);
            si.addAreaType(tent);
            si.addAreaType(caravan);
            mk.addAreaType(tent);
            mk.addAreaType(caravan);
            hr.addAreaType(tent);
            hr.addAreaType(caravan);

            ru_main.addAreaType(tent);
            ru_kgd.addAreaType(tent);
            me.addAreaType(house);
            rs.addAreaType(house);
            gb_nir.addAreaType(tent);
            gb_gbn.addAreaType(tent);
            im.addAreaType(house);
            gg.addAreaType(house);
            je.addAreaType(house);
            va.addAreaType(house);
            kosovo.addAreaType(house);
            mt.addAreaType(bighouse);
            dk.addAreaType(bighouse);
            cy.addAreaType(bighouse);
            nc.addAreaType(bighouse);
            
            Reservation r1 = new Reservation();
            Reservation r2 = new Reservation();
            Reservation r3 = new Reservation();
            Reservation r4 = new Reservation();
            
            r1.setAreaType(caravan);
            r2.setAreaType(caravan);
            r3.setAreaType(tent);
            
            Stay s1 = new Stay();
            Stay s2 = new Stay();
            Stay s3 = new Stay();
            Stay s4 = new Stay();

            Calendar stayStart = Calendar.getInstance();
            Calendar stayEnd = Calendar.getInstance();
            stayStart.add(Calendar.DAY_OF_YEAR, 2);
            stayStart.set(Calendar.HOUR_OF_DAY, 12);
            stayStart.set(Calendar.MINUTE, 00);
            stayStart.set(Calendar.SECOND, 00);
            stayEnd.add(Calendar.DAY_OF_YEAR, 9);
            stayEnd.set(Calendar.HOUR_OF_DAY, 11);
            stayEnd.set(Calendar.MINUTE, 59);
            stayEnd.set(Calendar.SECOND, 00);
            
            Calendar stayStart2 = Calendar.getInstance();
            Calendar stayEnd2 = Calendar.getInstance();
            stayStart2.add(Calendar.DAY_OF_YEAR, 7);
            stayStart2.set(Calendar.HOUR_OF_DAY, 12);
            stayStart2.set(Calendar.MINUTE, 00);
            stayStart2.set(Calendar.SECOND, 00);
            stayEnd2.add(Calendar.DAY_OF_YEAR, 21);
            stayEnd2.set(Calendar.HOUR_OF_DAY, 11);
            stayEnd2.set(Calendar.MINUTE, 59);
            stayEnd2.set(Calendar.SECOND, 00);

            r1.setStartDate(stayStart.getTime());
            r1.setEndDate(stayEnd.getTime());
            s1.setStartDate(stayStart.getTime());
            s1.setEndDate(stayEnd.getTime());
            
            r2.setStartDate(stayStart.getTime());
            r2.setEndDate(stayEnd.getTime());
            s2.setStartDate(stayStart.getTime());
            s2.setEndDate(stayEnd.getTime());
            
            r3.setStartDate(stayStart2.getTime());
            r3.setEndDate(stayEnd2.getTime());
            s3.setStartDate(stayStart2.getTime());
            s3.setEndDate(stayEnd2.getTime());

            r4.setStartDate(Calendar.getInstance().getTime());
            r4.setEndDate(stayEnd2.getTime());
            s4.setStartDate(Calendar.getInstance().getTime());
            s4.setEndDate(stayEnd2.getTime());
            
            s1.addGuest(u);
            s2.addGuest(u);
            s3.addGuest(u);
            s4.addGuest(u);
            
            s1.setReservation(r1);
            s2.setReservation(r2);
            s3.setReservation(r3);
            s4.setReservation(r4);
            
            r1.addStays(s1);
            r2.addStays(s2);
            r3.addStays(s3);
            r4.addStays(s4);
            
            r1.setCampsite(marina);
            r2.setCampsite(marina);
            r3.setCampsite(marina);
            r4.setCampsite(marina);

            r1.setArea(dk);
            dk.addReservation(r1);
            r2.setArea(it);
            it.addReservation(r2);
            r4.setArea(es);
            es.addReservation(r4);
            
            marina.addReservation(r1);
            marina.addReservation(r2);
            marina.addReservation(r3);
            marina.addReservation(r4);

            try {
                em.getTransaction().begin();
                
                em.persist(guest);
                em.persist(user);
                em.persist(employee);
                em.persist(owner);
                em.persist(admin);
                em.persist(marina);
                em.persist(campleta);
                em.persist(u);
                
                em.persist(tent);
                em.persist(caravan);
                em.persist(house);
                em.persist(bighouse);

                em.persist(gl);
                em.persist(is);
                em.persist(pt);
                em.persist(ma);
                em.persist(es);
                em.persist(tn);
                em.persist(dz);
                em.persist(be);
                em.persist(it);
                em.persist(by);
                em.persist(pl);
                em.persist(jo);
                em.persist(gr);
                em.persist(tm);
                em.persist(kz);
                em.persist(fi);
                em.persist(de);
                em.persist(se);
                em.persist(no);
                em.persist(ua);
                em.persist(il);
                em.persist(sa);
                em.persist(iq);
                em.persist(az);
                em.persist(ir);
                em.persist(ge);
                em.persist(sy);
                em.persist(tr);
                em.persist(am);
                em.persist(ie);
                em.persist(ch);
                em.persist(at);
                em.persist(cz);
                em.persist(sk);
                em.persist(hu);
                em.persist(lt);
                em.persist(lv);
                em.persist(md);
                em.persist(ro);
                em.persist(bg);
                em.persist(al);
                em.persist(ee);
                em.persist(lb);
                em.persist(ad);
                em.persist(sm);
                em.persist(mc);
                em.persist(lu);
                em.persist(fr);
                em.persist(li);
                em.persist(nl);
                em.persist(ba);
                em.persist(si);
                em.persist(mk);
                em.persist(hr);
                em.persist(ru_main);
                em.persist(ru_kgd);
                em.persist(me);
                em.persist(rs);
                em.persist(gb_nir);
                em.persist(gb_gbn);
                em.persist(im);
                em.persist(gg);
                em.persist(je);
                em.persist(va);
                em.persist(kosovo);
                em.persist(mt);
                em.persist(dk);
                em.persist(cy);
                em.persist(nc);
                
                em.persist(s1);
                em.persist(s2);
                em.persist(s3);
                em.persist(s4);
                
                em.persist(r1);
                em.persist(r2);
                em.persist(r3);
                em.persist(r4);

                em.getTransaction().commit();
            } finally {
                em.close();
            }
        } catch (Exception e) {
            System.out.println("ERROR -> " + e.getMessage());
            e.printStackTrace();
        }
    }

    @Override
    public void contextDestroyed(ServletContextEvent sce) {
    }
}
